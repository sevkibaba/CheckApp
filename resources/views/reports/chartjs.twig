{% extends 'templates/app.twig' %}

{% block content %}


<canvas id="myChart" width="400" height="400"></canvas>
<script>

// send browser date to server
var today = new Date();

var dayOfToday = today.getDate();
var monthOfToday = today.getMonth();
var yearOfToday = today.getFullYear();

// Get todays check data
function todaysChecksAjax(cb){
  $.ajax({
        url:'/reports/daily',
        type:'GET',
        
        success: function(data) {
          todaysChecks = JSON.parse(data);
          cb(todaysChecks);
        },
  });
};

var groupedOrders = {};
var dailyLabel = [];
var dailyData = [];

function loadTodaysChecks(checkObject) {

  myIndex = 0;
  checkObject.forEach(function(currValue, index, object){

    if(groupedOrders[currValue.product_name] === undefined){
      groupedOrders[currValue.product_name] = [currValue.product_price*currValue.quantity];
    }else{
      groupedOrders[currValue.product_name].push(currValue.product_price*currValue.quantity);
    }
      
  });
  

  for (var name in groupedOrders){
    dailyLabel.push(name) ;
  };

  for (var label in groupedOrders){
    var myTotal = 0;

    for(var i = 0; i < groupedOrders[label].length; i ++){
      myTotal = myTotal + groupedOrders[label][i];
        };
    dailyData.push(myTotal);

    };
    drawDailyChart(dailyLabel, dailyData);
};

todaysChecksAjax(loadTodaysChecks);

console.log(dailyLabel);
console.log(dailyData);


function drawDailyChart(dailyLabel, dailyData){

    //write random color function. assign bg and border colors at the same time
    var ctx = document.getElementById("myChart").getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: dailyLabel,
            datasets: [{
                label: '# of Votes',
                data: dailyData,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        
    });
    
};


</script>



{% endblock %}